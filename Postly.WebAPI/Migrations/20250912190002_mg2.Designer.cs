// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Postly.WebAPI.Context;

#nullable disable

namespace Postly.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250912190002_mg2")]
    partial class mg2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Postly.WebAPI.Models.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("LikedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("liked_at");

                    b.Property<Guid>("ShareId")
                        .HasColumnType("uuid")
                        .HasColumnName("share_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_likes");

                    b.HasIndex("ShareId")
                        .HasDatabaseName("ix_likes_share_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_likes_user_id");

                    b.ToTable("likes", (string)null);
                });

            modelBuilder.Entity("Postly.WebAPI.Models.Share", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("icerik");

                    b.Property<string>("IcerikResimUrl")
                        .HasColumnType("text")
                        .HasColumnName("icerik_resim_url");

                    b.Property<DateTime>("PaylasimTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paylasim_tarihi");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_shares");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_shares_user_id");

                    b.ToTable("shares", (string)null);
                });

            modelBuilder.Entity("Postly.WebAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("kayit_tarihi");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sifre_hash");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("soyad");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Postly.WebAPI.Models.Like", b =>
                {
                    b.HasOne("Postly.WebAPI.Models.Share", "Share")
                        .WithMany()
                        .HasForeignKey("ShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_likes_shares_share_id");

                    b.HasOne("Postly.WebAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_likes_users_user_id");

                    b.Navigation("Share");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Postly.WebAPI.Models.Share", b =>
                {
                    b.HasOne("Postly.WebAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shares_users_user_id");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
